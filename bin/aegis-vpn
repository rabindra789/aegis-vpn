#!/usr/bin/env bash
#===========================================================
# Aegis-VPN All-in-One CLI v2.1
# Author: Rabindra
# Description: Single entrypoint with menu-driven interface
#===========================================================

set -e

# Paths
BASE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
SCRIPTS_DIR="$BASE_DIR/scripts"
CLIENTS_DIR="$BASE_DIR/clients"
LOG_DIR="$BASE_DIR/var/log/aegis-vpn"
CONNECTION_LOG="$LOG_DIR/connections.log"
ERROR_LOG="$LOG_DIR/errors.log"
AUDIT_LOG="$LOG_DIR/audit.log"

WG_DIR="/etc/wireguard"
WG_INTERFACE="wg0"

# Ensure logs dir exists
mkdir -p "$CLIENTS_DIR" "$LOG_DIR"
chmod 700 "$CLIENTS_DIR" "$LOG_DIR"

# Source logging hooks only (no interactive code)
source "$SCRIPTS_DIR/log_hooks.sh"

# Dependency check
check_deps() {
    local missing=false
    for cmd in wg qrencode curl figlet; do
        if ! command -v "$cmd" &>/dev/null; then
            echo "[*] Installing missing dependency: $cmd"
            missing=true
        fi
    done

    if $missing; then
        sudo apt update -y
        sudo apt install -y wireguard qrencode curl figlet
    fi
}

# Privacy masking (IPv4+IPv6)
mask_ip() {
    sed -E 's/([0-9]{1,3}\.){3}[0-9]{1,3}/***.***.***.***/g; s/([0-9a-f]{0,4}:){2,7}[0-9a-f]{0,4}/****:****:****:****:****:****:****:****/g'
}

# Logs command
logs_cmd() {
    local file="$CONNECTION_LOG"
    local privacy=false

    while [[ $# -gt 0 ]]; do
        case "$1" in
            --errors) file="$ERROR_LOG" ;;
            --audit)  file="$AUDIT_LOG" ;;
            --privacy) privacy=true ;;
            *) echo "[!] Unknown flag: $1"; exit 1 ;;
        esac
        shift
    done

    if [[ ! -f "$file" ]]; then
        echo "No logs available at $file"
        return
    fi

    if $privacy; then
        tail -f "$file" | mask_ip
    else
        tail -f "$file"
    fi
}

# Dashboard command
dashboard_cmd() {
    local privacy=false
    if [[ "$1" == "--privacy" ]]; then
        privacy=true
    fi

    while true; do
        clear
        if command -v figlet &>/dev/null; then
            figlet -c "Aegis-VPN"
        else
            echo "┌───────── Aegis-VPN Dashboard ─────────┐"
        fi

        echo "Time: $(date '+%Y-%m-%d %H:%M:%S')"
        echo "─────────────────────────────────────────────"
        printf "%-15s %-20s %-12s %-10s\n" "Peer" "IP" "Status" "Uptime"
        echo "─────────────────────────────────────────────"

        if [[ -f "$CONNECTION_LOG" ]]; then
            while IFS='|' read -r ts peer ip event; do
                [[ -z "$peer" ]] && continue
                [[ "$privacy" == true ]] && ip="***.***.***.***"

                if [[ "$event" == "connected" ]]; then
                    t1=$(date -d "$ts" +%s)
                    t2=$(date +%s)
                    diff=$((t2 - t1))
                    h=$((diff/3600))
                    m=$(( (diff%3600)/60 ))
                    s=$((diff%60))
                    uptime=$(printf "%02d:%02d:%02d" $h $m $s)
                else
                    uptime="--:--:--"
                fi

                printf "%-15s %-20s %-12s %-10s\n" "$peer" "$ip" "$event" "$uptime"
            done < <(awk '{print $1 "|" $2 "|" $3 "|" $4}' "$CONNECTION_LOG")
        else
            echo "No connections logged yet."
        fi

        echo "─────────────────────────────────────────────"
        sleep 2
    done
}

# Client management commands
add_client_cmd() {
    "$SCRIPTS_DIR/manage_clients.sh" add
    echo
    echo "[*] Press Enter to return to the menu..."
    read -r
}
remove_client_cmd() {
    "$SCRIPTS_DIR/manage_clients.sh" remove
    echo
    echo "[*] Press Enter to return to the menu..."
    read -r
}
list_client_cmd() {
    "$SCRIPTS_DIR/manage_clients.sh" list
    echo
    echo "[*] Press Enter to return to the menu..."
    read -r
}

# Setup command
setup_cmd() {
    check_deps
    mkdir -p "$CLIENTS_DIR" "$LOG_DIR"
    chmod 700 "$CLIENTS_DIR" "$LOG_DIR"
    echo "[*] Setup complete! You can now use 'aegis-vpn dashboard' etc."
}

# Menu interface
menu() {
    while true; do
        clear
        echo "┌─────────────── Aegis-VPN Menu ────────────────┐"
        echo "│ 1) Setup                                      │"
        echo "│ 2) Add Client                                 │"
        echo "│ 3) Remove Client                              │"
        echo "│ 4) List Clients                               │"
        echo "│ 5) View Logs                                  │"
        echo "│ 6) Dashboard                                  │"
        echo "│ 7) Exit                                       │"
        echo "└───────────────────────────────────────────────┘"
        echo -n "Select an option [1-7]: "
        read -r choice

        case "$choice" in
            1) setup_cmd ;;
            2) add_client_cmd ;;
            3) remove_client_cmd ;;
            4) list_client_cmd ;;
            5) logs_cmd ;;
            6) dashboard_cmd ;;
            7) exit 0 ;;
            *) echo "[!] Invalid choice. Press Enter to continue."; read ;;
        esac
    done
}

# Main CLI parser
main() {
    if [[ $# -eq 0 ]]; then
        menu
        exit 0
    fi

    case "$1" in
        setup) setup_cmd ;;
        add) shift; add_client_cmd ;;
        remove) shift; remove_client_cmd ;;
        list) shift; list_client_cmd ;;
        logs) shift; logs_cmd "$@" ;;
        dashboard) shift; dashboard_cmd "$@" ;;
        *)
            echo "Aegis-VPN CLI"
            echo "Usage:"
            echo "  aegis-vpn              # Opens menu"
            echo "  aegis-vpn setup        # Install deps and prepare directories"
            echo "  aegis-vpn add          # Add a new client"
            echo "  aegis-vpn remove       # Remove a client"
            echo "  aegis-vpn list         # List all clients"
            echo "  aegis-vpn logs [...]   # View logs"
            echo "  aegis-vpn dashboard    # Open dashboard"
            ;;
    esac
}

main "$@"
